import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, RepeatVector, TimeDistributed, Dense

# Define the input data and target data shapes
input_shape = (1, 3)  # 1 timestep, 3 features
target_shape = (288, 1)  # 288 timesteps, 1 feature

# Generate some dummy data
np.random.seed(42)
input_data = np.random.rand(100, 1, 3)
target_data = np.random.rand(100, 288, 1)

# Define the LSTM model
model = Sequential()
model.add(LSTM(50, activation='relu', input_shape=input_shape))
model.add(RepeatVector(target_shape[0]))
model.add(LSTM(50, activation='relu', return_sequences=True))
model.add(TimeDistributed(Dense(1)))

# Compile the model
model.compile(optimizer='adam', loss='mse')

# Train the model
model.fit(input_data, target_data, epochs=2, batch_size=32, validation_split=0.2)

# Generate predictions
predictions = model.predict(input_data)

# Plot the results for one sample
sample_index = 0
plt.plot(target_data[sample_index, :, 0], label='True Data')
plt.plot(predictions[sample_index, :, 0], label='Predicted Data')
plt.legend()
plt.title('LSTM Model Prediction')
plt.xlabel('Timestep')
plt.ylabel('Value')
plt.show()
