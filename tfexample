import numpy as np
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import LSTM, Dense, Reshape

# Generate sample data
np.random.seed(42)
num_samples = 1000
input_timesteps = 1
input_features = 3
output_timesteps = 288
output_features = 1

# Create synthetic time series data
X = np.random.rand(num_samples, input_timesteps, input_features)
y = np.random.rand(num_samples, output_timesteps, output_features)

# Build the LSTM model
model = Sequential()
model.add(LSTM(50, input_shape=(input_timesteps, input_features)))
model.add(Dense(output_timesteps * output_features))

# Reshape the output to match the desired shape
model.add(Dense(output_timesteps * output_features))
model.add(Reshape((output_timesteps, output_features)))

# Compile the model
model.compile(optimizer='adam', loss='mse')

# Fit the model
model.fit(X, y, epochs=50, batch_size=32, verbose=2)

# Predict using the trained model
y_pred = model.predict(X)

# Plot a random example from the dataset
sample_index = np.random.randint(0, num_samples)
plt.plot(y[sample_index].flatten(), label='Actual')
plt.plot(y_pred[sample_index].flatten(), label='Predicted')
plt.title('LSTM Regression Prediction')
plt.xlabel('Timestep')
plt.ylabel('Value')
plt.legend()
plt.show()
